
. 
. *Install useful packages one time before running code
. //ssc install gtools
. //ssc install egenmore
. 
. **************************************************************
. * 2. Create directories for data and code, load ACS data set
. **************************************************************
. 
. global dir = "/projects/dperez/macropoverty"

. 
. global data = "${dir}/data/"

. global code = "${dir}/code/"

. 
. * load CPI data
. sysuse cpi_annual, clear 

. keep year cpiurs 

. tempfile cpi 

. save `cpi' 
file /tmp/St18859.000001 saved

. 
. *load ACS dataset
. use ${data}acs_extract.dta, clear

. 
. *later we will append 1970, 1980, 1990 data using
. //append using ${data}acs_historical.dta, gen(acs_ext)
. 
. *merge cpi data to ACS
. merge m:1 year using `cpi', keep(3) nogenerate

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                        48,162,117  
    -----------------------------------------

. 
. *adjust wages for 2018 values
. sum year

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
        year | 48,162,117    2010.646    4.765216       2000       2018

. local maxyear =`r(max)'

. sum cpiurs if year ==`maxyear'

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
      cpiurs |  3,214,539       369.8           0      369.8      369.8

. local basevalue =`r(mean)'

. 
. **************************************************************
. * 3.1 Universe and variable creation
. **************************************************************
. 
. *keep if in laborforce
. *keep 
. 
. *Delineate poverty threshold using poverty variable
. do acs_povcut.do

. /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Author:         Daniel Perez
> Title:          acs_povcut.do
> Date:           03-18-2020
> Created by:     Daniel Perez
> Purpose:        Create poverty cut for ACS analysis
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
. 
. gen byte povcut = .
(48,162,117 missing values generated)

. replace povcut = 1 if poverty < 100
(7,301,258 real changes made)

. replace povcut = 0 if poverty >= 100
(40,860,859 real changes made)

. 
. lab var povcut "Poverty threshold"

. label def povcut 0 "FamInc above poverty threshold" 1 "FamInc below poverty threshold"

. label value povcut povcut

. 
end of do-file

. 
. *intervalled age variable
. do agebins.do

. /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Author:         Daniel Perez
> Title:          agebins.do
> Date:           03-19-2020
> Created by:     Daniel Perez
> Purpose:        Create age bins for working age population
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
. 
. gen ageb = age if age>17 & age<65
(18,816,654 missing values generated)

. recode ageb (18/24 = 1) (25/34 = 2) (35/44 = 3) (45/54 = 4) (55/64 = 5)
(ageb: 29345463 changes made)

. 
. lab var ageb "Age (intervalled)"

. label def ageb 1 "18–24" 2 "25–34" 3 "35–44" 4 "45–54" 5 "55–64"

. label value ageb ageb

. 
end of do-file

. 
. *create wbhao variable
. do raceethnicity.do

. /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Author:         Daniel Perez
> Title:          agebins.do
> Date:           03-22-2020
> Created by:     Daniel Perez
> Purpose:        Create simplified race/ethnicity variable
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
. 
. gen wbhao = .
(48,162,117 missing values generated)

. 
. replace wbhao = 1 if race==1
(37,395,594 real changes made)

. replace wbhao = 2 if race==2
(4,877,379 real changes made)

. replace wbhao = 4 if race==4 | race==5 | race==6
(2,284,606 real changes made)

. replace wbhao = 5 if race==3 | racesing==7 | race==8 | race==9
(1,719,683 real changes made)

. *hispanic
. replace wbhao = 3 if hispan!=0
(6,319,712 real changes made)

. 
. lab var wbhao "Race/ethnicity, including Asian"

. #delimit ;
delimiter now ;
. lab define wbhao
> 1 "White"
> 2 "Black"
> 3 "Hispanic"
> 4 "Asian"
> 5 "Other";

. #delimit cr
delimiter now cr
. lab val wbhao wbhao

. 
end of do-file

. 
. *create EPI-style education variable
. do education.do

. /*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
> Author:         Daniel Perez
> Title:          education.do
> Date:           03-25-2020
> Created by:     Daniel Perez
> Purpose:        Create simplified educational attainment variable
> 
> ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
. 
. rename educ oldeduc

. 
. gen educ = .
(48,162,117 missing values generated)

. *Less than HS
. replace educ = 1 if educd<=61
(15,769,695 real changes made)

. *HS graduate/GED or equivalent
. replace educ = 2 if educd>=62 & educd<=64
(10,827,511 real changes made)

. *Some college
. replace educ = 3 if educd>=65 & educd<=90
(11,285,645 real changes made)

. *4 years of college / Bachelors
. replace educ = 4 if educd==100 | educd==101
(6,431,797 real changes made)

. *5+ years of college, and/or professional degree
. replace educ = 5 if educd>=110 & educd<=116
(3,847,469 real changes made)

. 
. lab var educ "Education level"

. #delimit ;
delimiter now ;
. lab define educ
> 1 "Less than high school"
> 2 "High school"
> 3 "Some college"
> 4 "College"
> 5 "Advanced"
> ;

. #delimit cr
delimiter now cr
. lab val educ educ

. 
. notes educ: 2000-2018 IPUMS ACS: derived from educd

. 
. 
end of do-file

. 
. **************************************************************
. * 3.2 Measuring income (from wages and salary) by family + quintiles
. **************************************************************
. *remove missing values from wage and salary
. mvdecode incwage, mv(999999) 
     incwage: 9419704 missing values generated

. 
. *adjust wage and salary to real 2018 dollars
. gen r_incwage = incwage * [`basevalue'/cpiurs]
(9,419,704 missing values generated)

. label var r_incwage "wages and salary income in real 2018 dollars"

. 
. *sum real wages within families
. gegen rf_incwage = total(r_incwage), by(year serial famsize) missing

. label var rf_incwage "income from salary and wages summed over family size"

. 
. *transform real wages
. gen rft_incwage = (rf_incwage / sqrt(famsize))
(75,493 missing values generated)

. label var rft_incwage "Transformed family salary and wages"

. 
. *create quintiles using real transformed family salary and wage incomes
. gegen rft_incwage5 = xtile(rft_incwage) if labforce==2 [pw=perwt], by(year) nq(5)
warning: type ignored with gegen function xtile

. label var rft_incwage5 "Transformed family salary and wage quintiles"

. 
. *label our quintiles
. #delimit;
delimiter now ;
. label def rft_incwage5
> 1 "First quintile 0–20%"
> 2 "Second quintile 20–40%"
> 3 "Third quintile 40–60%"
> 4 "Fourth quintile 60–80%"
> 5 "Fifth quintile 80–100%"
> ;

. #delimit cr
delimiter now cr
. lab val rft_incwage5 rft_incwage5

. 
. /*
> Note: Working-age households are those headed by someone under age 65. 
> Data are for money income. Percentage changes are approximated by taking
> the difference of natural logs of wages and hours.
> 
> */
. 
. **************************************************************
. * 3.3 Calculating hours and weeks worked per year, and usual hours per week by family
. **************************************************************
. 
. *average weeks worked per year, by individuals
. mvdecode wkswork*, mv(0)
    wkswork1: 6398830 missing values generated
    wkswork2: 23071707 missing values generated

. gen avgwkswork =.
(48,162,117 missing values generated)

. 
. /*
> replace avgwkswork = wkswork2
> recode avgwkswork (1 = 7) (2 = 20) (3 = 33) (4 = 43.5) (5=48.5) (6=51)
> */
. 
. *slightly less precise measure in years 2008-2018, using midpoint of intervaled variable
. replace avgwkswork = wkswork2 if year>=2008 & year<=2018
(17,618,723 real changes made)

. recode avgwkswork (1 = 7) (2 = 20) (3 = 33) (4 = 43.5) (5=48.5) (6=51)
(avgwkswork: 17618723 changes made)

. *exact weeks worked per year 2000-2007
. replace avgwkswork = wkswork1 if year>=2000 & year<=2007
(7,471,687 real changes made)

. 
. 
. *Usual hours worked per week, by family
. gegen weeklyfamhours = total(uhrswork), by(year serial famsize) missing

. label var weeklyfamhours "Usual hours worked per week, by family"

. 
. *annual hours worked per person, which is usual hours worked * avg weeks worked
. gen annualhours = uhrswork * avgwkswork
(23,071,707 missing values generated)

. label var annualhours "Usual hours worked annually, by individual"

. 
. *annual hours worked by family
. gegen annual_famhours = total(annualhours), by(year serial famsize) missing

. label var annual_famhours "Annual hours worked by family"

. 
. /**************************************************************
> 3.4 Calculating implied hourly wages from wages, salary and hours worked
> 
> https://www.epi.org/data/methodology/
> https://irle.berkeley.edu/files/2014/The-Impact-of-Oakland-data-and-methods.pdf
> https://www.brookings.edu/wp-content/uploads/2019/11/201911_Brookings-Metro_low-wage-workforce_Ross-Bateman_TECHNICAL-APPEND
> IX.pdf
> 
> **************************************************************/
. 
. gen hrwage0 = r_incwage / (annualhours) 
(23,071,707 missing values generated)

. label var hrwage0 "Implied hourly wages from wages and salary excluding hours topcode"

. *exclude outliers per EPI methodology
. replace hrwage0 = . if hrwage0 < .98
(1,632,597 real changes made, 1,632,597 to missing)

. replace hrwage0 = . if hrwage0 > 196.08
(163,752 real changes made, 163,752 to missing)

. 
. gen hrwage1 = rf_incwage / (annual_famhours) 
(8,182,993 missing values generated)

. label var hrwage1 "Implied hourly family wages from wages and salary"

. 
. *gen hrwage3 = rf_incwage / (annual_famhours) if rft_incwage5==1
. 
. *do exports.do
. 
. capture log close

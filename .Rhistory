filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%
arrange(year, realweekpay0, index) %>%
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12),
pop = sum(orgwgt/12),
n = n(),
quint_n = n/5,
bi_n = n/2,
quint_pop = pop/5,
bi_pop = pop/2)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%
arrange(year, realweekpay0, index) %>%
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12),
pop = sum(orgwgt/12),
quint_pop = pop/5, # 1/5th of the weighted population per year
bi_pop = pop/2) %>%
mutate(bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5)))))
count(cps_filtered, bins)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%
arrange(year, realweekpay0, index) %>%
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12),
pop = sum(orgwgt/12),
quint_pop = pop/5, # 1/5th of the weighted population per year
bi_pop = pop/2) %>%
mutate(bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
ungroup()
count(cps_filtered,bins)
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt)
avg_weekpay <- cps_filtered %>%
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt))
View(avg_weekpay)
avg_weekpay <- cps_filtered %>%
filter(age<65) %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt))
avg_weekpay <- cps_filtered %>%
filter(age<65) %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt))
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%
arrange(year, realweekpay0, index) %>%
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12),
pop = sum(orgwgt/12),
quint_pop = pop/5, # 1/5th of the weighted population per year
bi_pop = pop/2) %>%
mutate(bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
ungroup()
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt))
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt))
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = year, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1, w=wgt),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
avg_weekpay <- cps_filtered %>%
group_by(year, bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
bi_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(bi_bins = ifelse(cumsum <= bi_pop, yes=1, no=2)) %>%
ungroup()
avg_weekpay_bi <- cps_filtered %>%
group_by(year, bi_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = bi_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
View(avg_weekpay_bi)
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
quantile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
median_metrics <- cps_filtered %>%
group_by(year, med_bin) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt)) %>%
pivot_wider(id_cols = med_bin, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
rand_order <- createWorkbook()
addWorksheet(rand_order, sheetName = "Quintile metrics")
addWorksheet(rand_order, sheetName = "Median metrics")
writeData(rand_order, quantile_metrics, sheet = "Quintile metrics", startCol = 1, startRow = 1, colNames = TRUE)
writeData(rand_order, median_metrics, sheet = "Median metrics", startCol = 1, startRow = 1, colNames = TRUE)
saveWorkbook(rand_order, here("data/Metrics.xlsx"), overwrite = TRUE)
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
library(tidyverse)
library(epiextractr)
library(epidatatools)
library(labelled)
library(here)
library(blsAPI)
library(openxlsx)
library(MetricsWeighted)
library(gtools)
library(statar)
cpi <- read_csv(here("input/cpi_annual.csv"))
cpi_base <- cpi$cpiurs[cpi$year == 2019]
cpsorg <-load_org(2009:2019, year, month, orgwgt, hhid, personid, statefips, age, emp, selfemp, selfinc, hourslw1, hoursu1i, multjobs, lfstat, wage, earnhour) %>%
filter(age>=16) %>%
mutate(wgt = orgwgt/12) %>%
mutate(selfemp0 = ifelse(selfemp==1 & !is.na(selfemp), yes=1, no=0),
selfinc0 = ifelse(selfinc==1 & !is.na(selfinc), yes=1, no=0)) %>%
filter(selfemp0==0, selfemp0==0) %>%
left_join(cpi, by='year') %>%
mutate(wgt = orgwgt/12) %>%
mutate(phours1 = ifelse(hourslw1>0 & !is.na(hourslw1), yes=1, no=0),
weekpay = wage * hoursu1i,
realwage = wage*(cpi_base/cpiurs),
realwage0 = replace(realwage, emp==0, 0),
realweekpay = weekpay*(cpi_base/cpiurs),
realweekpay0 = replace(realweekpay, emp==0, 0),
pwages = ifelse(realwage0>0 & !is.na(realwage0) , yes=1, no=0),
pweekpay = ifelse(realweekpay0>0 & !is.na(realweekpay0) , yes=1, no=0),
hourslw0 = replace(hourslw1, emp==0, 0)) %>%   #inflation adjust to wages to 2019$
set_value_labels(pwages = c('Positive wages' = 1, 'Zero wages' = 0),
pweekpay = c('Positive weekpay' = 1, 'Zero weekpay' = 0),
phours1 = c('Positive hours, primary job' = 1, 'Zero hours' =0))
# count(cpsorg, pweekpay, emp)
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
quantile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
median_metrics <- cps_filtered %>%
group_by(year, med_bin) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = med_bin, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage))
rand_order <- createWorkbook()
addWorksheet(rand_order, sheetName = "Quintile metrics")
addWorksheet(rand_order, sheetName = "Median metrics")
writeData(rand_order, quantile_metrics, sheet = "Quintile metrics", startCol = 1, startRow = 1, colNames = TRUE)
writeData(rand_order, median_metrics, sheet = "Median metrics", startCol = 1, startRow = 1, colNames = TRUE)
saveWorkbook(rand_order, here("data/Metrics.xlsx"), overwrite = TRUE)
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
quantile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage, n, wgt_n))
median_metrics <- cps_filtered %>%
group_by(year, med_bin) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = med_bin, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage, n, wgt_n))
rand_order <- createWorkbook()
addWorksheet(rand_order, sheetName = "Quintile metrics")
addWorksheet(rand_order, sheetName = "Median metrics")
writeData(rand_order, quantile_metrics, sheet = "Quintile metrics", startCol = 1, startRow = 1, colNames = TRUE)
writeData(rand_order, median_metrics, sheet = "Median metrics", startCol = 1, startRow = 1, colNames = TRUE)
saveWorkbook(rand_order, here("data/Metrics.xlsx"), overwrite = TRUE)
library(tidyverse)
library(epiextractr)
library(epidatatools)
library(labelled)
library(here)
library(blsAPI)
library(openxlsx)
library(MetricsWeighted)
library(gtools)
library(statar)
cpi <- read_csv(here("input/cpi_annual.csv"))
cpi_base <- cpi$cpiurs[cpi$year == 2019]
cpsorg <-load_org(2009:2019, year, month, orgwgt, hhid, personid, statefips, age, emp, selfemp, selfinc, hourslw1, hoursu1i, multjobs, lfstat, wage, earnhour) %>%
filter(age>=16) %>%
mutate(wgt = orgwgt/12) %>%
mutate(selfemp0 = ifelse(selfemp==1 & !is.na(selfemp), yes=1, no=0),
selfinc0 = ifelse(selfinc==1 & !is.na(selfinc), yes=1, no=0)) %>%
filter(selfemp0==0, selfemp0==0) %>%
left_join(cpi, by='year') %>%
mutate(wgt = orgwgt/12) %>%
mutate(weekpay = wage * hoursu1i,
realwage = wage*(cpi_base/cpiurs),
realwage0 = replace(realwage, emp==0, 0),
realweekpay = weekpay*(cpi_base/cpiurs),
realweekpay0 = replace(realweekpay, emp==0, 0),
pwages = ifelse(realwage0>0 & !is.na(realwage0) , yes=1, no=0),
pweekpay = ifelse(realweekpay0>0 & !is.na(realweekpay0) , yes=1, no=0),
hoursu1i = replace(hoursu1i, emp==0, 0),
phours1 = ifelse(hoursu1i>0 & !is.na(hoursu1i), yes=1, no=0)) %>%   #inflation adjust to wages to 2019$
set_value_labels(pwages = c('Positive wages' = 1, 'Zero wages' = 0),
pweekpay = c('Positive weekpay' = 1, 'Zero weekpay' = 0),
phours1 = c('Positive hours, primary job' = 1, 'Zero hours' =0))
# count(cpsorg, pweekpay, emp)
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
quantile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_hours_lw1 = weighted.mean(hourslw0, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_hours_lw1, avg_wage, n, wgt_n))
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
quantile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_wage, n, wgt_n))
median_metrics <- cps_filtered %>%
group_by(year, med_bin) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt, na.rm=TRUE),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = med_bin, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_wage, n, wgt_n))
rand_order <- createWorkbook()
addWorksheet(rand_order, sheetName = "Quintile metrics")
addWorksheet(rand_order, sheetName = "Median metrics")
writeData(rand_order, quantile_metrics, sheet = "Quintile metrics", startCol = 1, startRow = 1, colNames = TRUE)
writeData(rand_order, median_metrics, sheet = "Median metrics", startCol = 1, startRow = 1, colNames = TRUE)
saveWorkbook(rand_order, here("data/Metrics.xlsx"), overwrite = TRUE)
View(median_metrics)
View(median_metrics)
View(quantile_metrics)
median_metrics <- cps_filtered %>%
group_by(year, med_bin) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = med_bin, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_wage, n, wgt_n))
quintile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_wage, n, wgt_n))
View(quintile_metrics)
set.seed(1017)
cps_filtered <- cpsorg %>%
filter(selfemp0==0, selfemp0==0, age<65) %>%
filter((emp==1 & phours1== 1 & pweekpay==1) | (emp==0 & phours1==0 & pweekpay==0)) %>%
mutate(index = runif(nrow(.), min = 0, max=1)) %>%  #assign each observation a random # between 0 and 1
arrange(year, realweekpay0, index) %>%  # sort by year, real weekly pay, and index (might be unnecessary)?
group_by(year) %>%
mutate(cumsum = cumsum(orgwgt/12), #column with cumulative sum of org weight
pop = sum(orgwgt/12), #column with total pop in each year
quint_pop = pop/5, # 1/5th of the weighted population by year
med_pop = pop/2) %>% # 1/2 of weighted pop by year
mutate(quint_bins = ifelse(cumsum <= quint_pop, 1,
ifelse(cumsum > quint_pop & cumsum <= quint_pop*2, 2,
ifelse(cumsum > quint_pop*2 & cumsum <= quint_pop*3, 3,
ifelse(cumsum > quint_pop*3 & cumsum <= quint_pop*4, 4, 5))))) %>%
mutate(med_bin = ifelse(cumsum <= med_pop, yes=1, no=2)) %>%
ungroup()
quintile_metrics <- cps_filtered %>%
group_by(year, quint_bins) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = quint_bins, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_wage, n, wgt_n))
median_metrics <- cps_filtered %>%
group_by(year, med_bin) %>%
summarize(avg_weekpay = weighted.mean(realweekpay0, w=wgt),
epop = weighted.mean(emp, w=wgt),
avg_hours = weighted.mean(hoursu1i, w=wgt),
avg_wage = weighted.mean(realwage0, w=wgt),
n = n(),
wgt_n = sum(orgwgt/12)) %>%
pivot_wider(id_cols = med_bin, names_from = year, values_from = c(avg_weekpay, epop, avg_hours, avg_wage, n, wgt_n))
rand_order <- createWorkbook()
addWorksheet(rand_order, sheetName = "Quintile metrics")
addWorksheet(rand_order, sheetName = "Median metrics")
writeData(rand_order, quintile_metrics, sheet = "Quintile metrics", startCol = 1, startRow = 1, colNames = TRUE)
writeData(rand_order, median_metrics, sheet = "Median metrics", startCol = 1, startRow = 1, colNames = TRUE)
saveWorkbook(rand_order, here("data/Metrics.xlsx"), overwrite = TRUE)
library(tidyverse)
library(epiextractr)
library(epidatatools)
library(labelled)
library(here)
library(blsAPI)
library(openxlsx)
#Load census 2020 poverty thresholds
pov_thresh <- read_csv(here('input/povthresh20.csv'), col_names=TRUE) %>%
filter(over65==0) %>%
select(-year)
cpi <- read_csv(here('input/cpi.csv'), col_names=TRUE)
cpi_base <- cpi$cpi_u_rs[cpi$year == '2020' & cpi$month=='12'] # Adjust all to Dec 2020 $
cps <-load_basic(2020, year, month, ftptstat, selfemp, personid, hhid, hrhhid, hrhhid2, hhtype, famtype, famid, famrel, ownchild, agechild, wage, weekpay, ind17, mind03, occ18, hourslwt, paidhre, emp, lfstat, dlfstat, orgwgt, age, female, wbhao, faminc, minsamp, basicwgt, finalwgt, cow1) %>%
filter(minsamp %in% c(4,8), age>=16) %>%
mutate(wgt = orgwgt/12) %>% #keep only those interviewed in the ORG, non-elderly
left_join(cpi, by=c('year', 'month')) %>%   #merge CPI data
mutate(inflation_dec2020 = (cpi_base/cpi_u_rs)-1,
realweekpay = weekpay*(cpi_base/cpi_u_rs),  #inflation adjust to wages to dec 2020$
realyearpay = realweekpay*52,
all_wgt = ifelse(age<16, yes=finalwgt, no=orgwgt), #create a new weight
headratio = ifelse(famrel==1, yes=wgt/finalwgt, no=NA), #create ratio for primary respondent
realyearpay = replace(realyearpay, emp==1 & is.na(hourslwt), 0),
realweekpay = replace(realweekpay, emp==1 & is.na(hourslwt), 0),
under18 = ifelse(age<18, yes=1, no=0)) %>%
set_value_labels(under18 = c('under 18'= 1, 'over 18'=0),
month = c('Jan' = 1, 'Feb' = 2, 'Mar' = 3, 'Apr' = 4,
'May' = 5, 'Jun' = 6, 'Jul' = 7, 'Aug' = 8,
'Sept' = 9, 'Oct' = 10, 'Nov' = 11, 'Dec' = 12))
